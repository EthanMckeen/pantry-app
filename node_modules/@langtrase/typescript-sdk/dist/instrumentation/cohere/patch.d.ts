import { Tracer } from '@opentelemetry/api';
import { ICohereClient, IChatRequest, IRequestOptions, ChatFn, INonStreamedChatResponse, ChatStreamFn, IEmbedRequest, IEmbedResponse, EmbedFn, RerankFn, IRerankResponse, IRerankRequest, EmbedJobsCreateFn, ICreateEmbedJobRequest, ICreateEmbedJobResponse } from '../cohere/types';
export declare const chatPatch: (original: ChatFn, tracer: Tracer, langtraceVersion: string, sdkName: string, moduleVersion?: string) => (this: ICohereClient, request: IChatRequest, requestOptions?: IRequestOptions) => Promise<INonStreamedChatResponse>;
export declare const chatStreamPatch: (original: ChatStreamFn, tracer: Tracer, langtraceVersion: string, sdkName: string, moduleVersion?: string) => (this: ICohereClient, request: IChatRequest, requestOptions?: IRequestOptions) => Promise<any>;
export declare const embedPatch: (original: EmbedFn, tracer: Tracer, langtraceVersion: string, sdkName: string, moduleVersion?: string) => (this: ICohereClient, request: IEmbedRequest, requestOptions?: IRequestOptions) => Promise<IEmbedResponse>;
export declare const embedJobsCreatePatch: (original: EmbedJobsCreateFn, tracer: Tracer, langtraceVersion: string, sdkName: string, moduleVersion?: string) => (this: ICohereClient, request: ICreateEmbedJobRequest, requestOptions?: IRequestOptions) => Promise<ICreateEmbedJobResponse>;
export declare const rerankPatch: (original: RerankFn, tracer: Tracer, langtraceVersion: string, sdkName: string, moduleVersion?: string) => (this: ICohereClient, request: IRerankRequest, requestOptions?: IRequestOptions) => Promise<IRerankResponse>;
