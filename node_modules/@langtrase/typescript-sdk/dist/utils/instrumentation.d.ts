import { SpanKind } from '@opentelemetry/api';
/**
 *
 * @param fn  The function to be executed within the context of the root span. The function should accept the spanId and traceId as arguments
 * @param name Name of the root span
 * @param spanAttributes Attributes to be added to the root span
 * @param spanKind The kind of span to be created
 * @returns result of the function
 */
export declare function withLangTraceRootSpan<T>(fn: (spanId: string, traceId: string) => Promise<T>, name?: string, spanKind?: SpanKind): Promise<T>;
/**
 *
 * @param fn function to be executed within the context with the custom attributes added to the current context
 * @param attributes custom attributes to be added to the current context
 * @returns result of the function
 */
export declare function withAdditionalAttributes<T>(fn: () => Promise<T>, attributes: Record<string, any> | Promise<Record<string, any>>): Promise<T>;
