"use strict";
/*
 * Copyright (c) 2024 Scale3 Labs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.calculatePromptTokens = exports.estimateTokensUsingTikToken = exports.estimateTokens = void 0;
const trace_attributes_1 = require("@langtrase/trace-attributes");
const tiktoken_1 = require("tiktoken");
function estimateTokens(prompt) {
    if (prompt.length > 0) {
        // Simplified token estimation: count the words.
        return prompt.split(/\s+/).filter(Boolean).length;
    }
    return 0;
}
exports.estimateTokens = estimateTokens;
function estimateTokensUsingTikToken(prompt, model) {
    const encoding = (0, tiktoken_1.get_encoding)(model);
    const tokens = encoding.encode(prompt);
    return tokens.length;
}
exports.estimateTokensUsingTikToken = estimateTokensUsingTikToken;
function calculatePromptTokens(promptContent, model) {
    try {
        const tiktokenModel = trace_attributes_1.TIKTOKEN_MODEL_MAPPING[model];
        return estimateTokensUsingTikToken(promptContent, tiktokenModel);
    }
    catch (error) {
        return estimateTokens(promptContent); // Fallback method
    }
}
exports.calculatePromptTokens = calculatePromptTokens;
//# sourceMappingURL=llm.js.map