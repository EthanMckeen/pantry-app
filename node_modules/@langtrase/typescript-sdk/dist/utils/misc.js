"use strict";
/*
 * Copyright (c) 2024 Scale3 Labs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createStreamProxy = exports.stringify = exports.boxText = exports.getCurrentAndLatestVersion = exports.setValueFromPath = exports.getValueFromPath = void 0;
const axios_1 = __importDefault(require("axios"));
// eslint-disable-next-line no-restricted-imports
const package_json_1 = require("../../package.json");
const ansi_colors_1 = require("ansi-colors");
/**
 *
 * @param obj record<string, any>
 * @param path dot separated string path
 * @returns value at the path in the object
 */
function getValueFromPath(obj, path) {
    if (path === undefined) {
        return undefined;
    }
    return path.split('.').reduce((o, p) => (o !== undefined ? o[p] : undefined), obj);
}
exports.getValueFromPath = getValueFromPath;
/**
 *
 * @param obj record<string, any>
 * @param path dot separated string path
 * @param value value to set at the path in the object
 * @returns void
 */
function setValueFromPath(obj, path, value) {
    if (path === undefined) {
        return undefined;
    }
    const keys = path.split('.');
    const lastKey = keys.pop();
    const deepObj = keys.reduce((o, p) => (o[p] = o[p] ?? {}), obj);
    if (lastKey !== undefined) {
        deepObj[lastKey] = value;
    }
}
exports.setValueFromPath = setValueFromPath;
async function getCurrentAndLatestVersion() {
    const res = await axios_1.default.get(`https://registry.npmjs.org/${package_json_1.name}/latest`);
    const latestVersion = res.data.version;
    if (latestVersion !== undefined) {
        return { currentVersion: package_json_1.version, latestVersion };
    }
}
exports.getCurrentAndLatestVersion = getCurrentAndLatestVersion;
const boxText = (text) => {
    const lines = text.split('\n');
    const strippedLines = lines.map(line => line.replace(ansi_colors_1.ansiRegex, ''));
    const longestLine = strippedLines.reduce((a, b) => (a.length > b.length ? a : b)).length;
    const top = '┌' + '─'.repeat(longestLine + 2) + '┐';
    const bottom = '└' + '─'.repeat(longestLine + 2) + '┘';
    const middle = lines.map((line, index) => {
        const padding = longestLine - strippedLines[index].length;
        return '│ ' + line + ' '.repeat(padding) + ' │';
    }).join('\n');
    return `\n${top}\n${middle}\n${bottom}\n`;
};
exports.boxText = boxText;
/**
 * This function is used to convert an object to a string. It filters out functions and keys starting with '_' as they are considered private.
 * @param obj any
 * @returns string
 */
function stringify(obj) {
    return JSON.stringify(obj, (key, value) => {
        if (typeof value !== 'function' && !key.startsWith('_')) {
            return value;
        }
        return undefined;
    }, 2);
}
exports.stringify = stringify;
/**
 *
 * @param stream input stream
 * @param generatorFuncResponse generator function response from the wrapped stream
 * @returns stream proxy
 */
function createStreamProxy(stream, generatorFuncResponse) {
    return new Proxy(stream, {
        get(target, prop, receiver) {
            if (prop === Symbol.asyncIterator) {
                return () => generatorFuncResponse;
            }
            return Reflect.get(target, prop, receiver);
        }
    });
}
exports.createStreamProxy = createStreamProxy;
//# sourceMappingURL=misc.js.map